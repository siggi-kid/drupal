<?php

/**
 * @file
 * Modifies the argument and title of the "photo view" view.
 */

/**
 * Implementation of hook_help().
 */
function view_taxonomy_help($path, $arg) {
  if ($path == 'admin/help#view_taxonomy') {
    return t('
      <p>
      This modules allows users to use the taxonomy string value for a view
      with "contextual filters".
      </p>
      <p>
      For example there is a view using a gallery taxonomy and a name taxonomy.
      This view may be called by "view/@dog/@caspar". The module changes this
      call to e.g. "view/3/2". Additionally this module will change the title to
      "Dog : Caspar".
      </p>
      <p>
      This replacement is only done for arguments starting with "@". This
      character will be removed and the first character set to upper case.
      </p>
    ');
  }
}

/**
 * Implements hook_views_pre_view().
 * 
 * We modify the title in case we find a taxonomy expression. To do so we
 * store the new title in a new view variable.
 */
function view_taxonomy_views_pre_view(&$view, &$display_id, &$args) {

  $found = FALSE;
  foreach ($args as $arg) {
    if ($arg[0] == '@') {
      $found = TRUE;
    }
  }
  if (!$found) {
    return;
  }

  $title = '';

  for ($i = 0; $i < count($args); $i++) {
    $arg = $args[$i];
    if ($arg[0] != '@') {
      continue;
    }
    $arg = ucfirst(substr($arg, 1));
    
    if ($title) {
      $title .= ' : ';
    }
    $title .= $arg;
    
    $tag_idx = _view_taxonomy_get_index($arg);
    if (!$tag_idx) {
      $title = '???';
    } else {
      $view->args[$i] = $tag_idx;
    }    
  }
  
  $view->view_taxonomy_title = $title;
}

function _view_taxonomy_get_index($name) {
  $idx = db_query('SELECT tid FROM {taxonomy_term_data} WHERE name = :name',
          array(':name' => $name))->fetchField();
  return $idx;
}

/**
 * Implements hook_views_pre_render().
 * 
 * If there is a title set in our new view variable, we set the title to this
 * value.
 */
function view_taxonomy_views_pre_render(&$view) {
  if (isset($view->view_taxonomy_title)) {
    $view->build_info['title'] = $view->view_taxonomy_title;
  }
}